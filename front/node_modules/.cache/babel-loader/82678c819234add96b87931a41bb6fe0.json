{"remainingRequest":"D:\\Microsoft VS Code\\vs code\\软件项目管理\\大实例\\前后端源码\\front\\node_modules\\babel-loader\\lib\\index.js!D:\\Microsoft VS Code\\vs code\\软件项目管理\\大实例\\前后端源码\\front\\src\\utils\\rsaEncrypt.js","dependencies":[{"path":"D:\\Microsoft VS Code\\vs code\\软件项目管理\\大实例\\前后端源码\\front\\src\\utils\\rsaEncrypt.js","mtime":1741681638916},{"path":"D:\\Microsoft VS Code\\vs code\\软件项目管理\\大实例\\前后端源码\\front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Microsoft VS Code\\vs code\\软件项目管理\\大实例\\前后端源码\\front\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC50by1zdHJpbmcuanMiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZS5qcyI7CmltcG9ydCBfYXN5bmNUb0dlbmVyYXRvciBmcm9tICJEOi9NaWNyb3NvZnQgVlMgQ29kZS92cyBjb2RlL1x1OEY2Rlx1NEVGNlx1OTg3OVx1NzZFRVx1N0JBMVx1NzQwNi9cdTU5MjdcdTVCOUVcdTRGOEIvXHU1MjREXHU1NDBFXHU3QUVGXHU2RTkwXHU3ODAxL2Zyb250L25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKaW1wb3J0IGNvbnN0YW50IGZyb20gJ0AvY29uc3RhbnQnOwppbXBvcnQgb3RoZXJBUEkgZnJvbSAnQC9hcGkvb3RoZXInOwoKdmFyIENyeXB0b0pTID0gcmVxdWlyZSgnY3J5cHRvLWpzJyk7IC8vIGNvbnN0IGRhdGEgPSAnODg4ODg4JwovLyBjb25zdCBzcmNzID0gQ3J5cHRvSlMuZW5jLlV0ZjgucGFyc2UoZGF0YSkKCgp2YXIga2V5ID0gQ3J5cHRvSlMuZW5jLlV0ZjgucGFyc2UoY29uc3RhbnQuQ1JZUFQpOwoKZnVuY3Rpb24gRW5jcnlwdChfeCkgewogIHJldHVybiBfRW5jcnlwdC5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwp9CgpmdW5jdGlvbiBfRW5jcnlwdCgpIHsKICBfRW5jcnlwdCA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSh3b3JkKSB7CiAgICB2YXIga2V5MSwga2V5LCBzcmNzLCBlbmNyeXB0ZWQsIHZhbHVlOwogICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMjsKICAgICAgICAgICAgcmV0dXJuIG90aGVyQVBJLmdldEtleSgpOwoKICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAga2V5MSA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgIGtleSA9IENyeXB0b0pTLmVuYy5VdGY4LnBhcnNlKG90aGVyQVBJLmdldFdob2xlS2V5KGtleTEuZGF0YS5rZXksIGtleTEuZGF0YS52YWx1ZSkpOyAvLyBjb25zb2xlLmxvZyhvdGhlckFQSS5nZXRXaG9sZUtleShrZXkxLmRhdGEua2V5LCBrZXkxLmRhdGEudmFsdWUpKQoKICAgICAgICAgICAgc3JjcyA9IENyeXB0b0pTLmVuYy5VdGY4LnBhcnNlKHdvcmQpOwogICAgICAgICAgICBlbmNyeXB0ZWQgPSBDcnlwdG9KUy5BRVMuZW5jcnlwdChzcmNzLCBrZXksIHsKICAgICAgICAgICAgICBtb2RlOiBDcnlwdG9KUy5tb2RlLkVDQiwKICAgICAgICAgICAgICBwYWRkaW5nOiBDcnlwdG9KUy5wYWQuUGtjczcKICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIHZhbHVlID0ga2V5MS5kYXRhLnZhbHVlOwogICAgICAgICAgICB2YWx1ZSA9IHZhbHVlID4gOSA/IHZhbHVlIDogJzAnICsgdmFsdWU7CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5hYnJ1cHQoInJldHVybiIsIGVuY3J5cHRlZC50b1N0cmluZygpICsgdmFsdWUpOwoKICAgICAgICAgIGNhc2UgOToKICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgfQogICAgICB9CiAgICB9LCBfY2FsbGVlKTsKICB9KSk7CiAgcmV0dXJuIF9FbmNyeXB0LmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7Cn0KCmZ1bmN0aW9uIERlY3J5cHQod29yZCkgewogIHZhciBkZWNyeXB0ID0gQ3J5cHRvSlMuQUVTLmRlY3J5cHQod29yZCwga2V5LCB7CiAgICBtb2RlOiBDcnlwdG9KUy5tb2RlLkVDQiwKICAgIHBhZGRpbmc6IENyeXB0b0pTLnBhZC5Qa2NzNwogIH0pOwogIHJldHVybiBDcnlwdG9KUy5lbmMuVXRmOC5zdHJpbmdpZnkoZGVjcnlwdCkudG9TdHJpbmcoKTsKfQoKZnVuY3Rpb24gZ2V0RW5jcnlwdEtleVdvcmQoX3gyKSB7CiAgcmV0dXJuIF9nZXRFbmNyeXB0S2V5V29yZC5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwp9CgpmdW5jdGlvbiBfZ2V0RW5jcnlwdEtleVdvcmQoKSB7CiAgX2dldEVuY3J5cHRLZXlXb3JkID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMihrZXl3b3JkKSB7CiAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIkKF9jb250ZXh0MikgewogICAgICB3aGlsZSAoMSkgewogICAgICAgIHN3aXRjaCAoX2NvbnRleHQyLnByZXYgPSBfY29udGV4dDIubmV4dCkgewogICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLmFicnVwdCgicmV0dXJuIiwgRW5jcnlwdChrZXl3b3JkKSk7CgogICAgICAgICAgY2FzZSAxOgogICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5zdG9wKCk7CiAgICAgICAgfQogICAgICB9CiAgICB9LCBfY2FsbGVlMik7CiAgfSkpOwogIHJldHVybiBfZ2V0RW5jcnlwdEtleVdvcmQuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKfQoKZXhwb3J0IHsgRGVjcnlwdCwgRW5jcnlwdCwgZ2V0RW5jcnlwdEtleVdvcmQgfTs="},{"version":3,"sources":["D:/Microsoft VS Code/vs code/软件项目管理/大实例/前后端源码/front/src/utils/rsaEncrypt.js"],"names":["constant","otherAPI","CryptoJS","require","key","enc","Utf8","parse","CRYPT","Encrypt","word","getKey","key1","getWholeKey","data","value","srcs","encrypted","AES","encrypt","mode","ECB","padding","pad","Pkcs7","toString","Decrypt","decrypt","stringify","getEncryptKeyWord","keyword"],"mappings":";;;;AAAA,OAAOA,QAAP,MAAqB,YAArB;AACA,OAAOC,QAAP,MAAqB,aAArB;;AAEA,IAAMC,QAAQ,GAAGC,OAAO,CAAC,WAAD,CAAxB,C,CACA;AACA;;;AACA,IAAMC,GAAG,GAAGF,QAAQ,CAACG,GAAT,CAAaC,IAAb,CAAkBC,KAAlB,CAAwBP,QAAQ,CAACQ,KAAjC,CAAZ;;SAEeC,O;;;;;qEAAf,iBAAuBC,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACqBT,QAAQ,CAACU,MAAT,EADrB;;AAAA;AACQC,YAAAA,IADR;AAEQR,YAAAA,GAFR,GAEcF,QAAQ,CAACG,GAAT,CAAaC,IAAb,CAAkBC,KAAlB,CAAwBN,QAAQ,CAACY,WAAT,CAAqBD,IAAI,CAACE,IAAL,CAAUV,GAA/B,EAAoCQ,IAAI,CAACE,IAAL,CAAUC,KAA9C,CAAxB,CAFd,EAGE;;AACIC,YAAAA,IAJN,GAIad,QAAQ,CAACG,GAAT,CAAaC,IAAb,CAAkBC,KAAlB,CAAwBG,IAAxB,CAJb;AAKMO,YAAAA,SALN,GAKkBf,QAAQ,CAACgB,GAAT,CAAaC,OAAb,CAAqBH,IAArB,EAA2BZ,GAA3B,EAAgC;AAAEgB,cAAAA,IAAI,EAAElB,QAAQ,CAACkB,IAAT,CAAcC,GAAtB;AAA2BC,cAAAA,OAAO,EAAEpB,QAAQ,CAACqB,GAAT,CAAaC;AAAjD,aAAhC,CALlB;AAOMT,YAAAA,KAPN,GAOcH,IAAI,CAACE,IAAL,CAAUC,KAPxB;AAQEA,YAAAA,KAAK,GAAGA,KAAK,GAAG,CAAR,GAAYA,KAAZ,GAAoB,MAAMA,KAAlC;AARF,6CASSE,SAAS,CAACQ,QAAV,KAAuBV,KAThC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAWA,SAASW,OAAT,CAAiBhB,IAAjB,EAAuB;AACrB,MAAIiB,OAAO,GAAGzB,QAAQ,CAACgB,GAAT,CAAaS,OAAb,CAAqBjB,IAArB,EAA2BN,GAA3B,EAAgC;AAAEgB,IAAAA,IAAI,EAAElB,QAAQ,CAACkB,IAAT,CAAcC,GAAtB;AAA2BC,IAAAA,OAAO,EAAEpB,QAAQ,CAACqB,GAAT,CAAaC;AAAjD,GAAhC,CAAd;AACA,SAAOtB,QAAQ,CAACG,GAAT,CAAaC,IAAb,CAAkBsB,SAAlB,CAA4BD,OAA5B,EAAqCF,QAArC,EAAP;AACD;;SAEcI,iB;;;;;+EAAf,kBAAiCC,OAAjC;AAAA;AAAA;AAAA;AAAA;AAAA,8CAQSrB,OAAO,CAACqB,OAAD,CARhB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAkBA,SACEJ,OADF,EAEEjB,OAFF,EAGEoB,iBAHF","sourcesContent":["import constant from '@/constant'\r\nimport otherAPI from '@/api/other'\r\n\r\nconst CryptoJS = require('crypto-js')\r\n// const data = '888888'\r\n// const srcs = CryptoJS.enc.Utf8.parse(data)\r\nconst key = CryptoJS.enc.Utf8.parse(constant.CRYPT)\r\n\r\nasync function Encrypt(word) {\r\n  const key1 = await otherAPI.getKey()\r\n  const key = CryptoJS.enc.Utf8.parse(otherAPI.getWholeKey(key1.data.key, key1.data.value))\r\n  // console.log(otherAPI.getWholeKey(key1.data.key, key1.data.value))\r\n  var srcs = CryptoJS.enc.Utf8.parse(word)\r\n  var encrypted = CryptoJS.AES.encrypt(srcs, key, { mode: CryptoJS.mode.ECB, padding: CryptoJS.pad.Pkcs7 })\r\n\r\n  var value = key1.data.value\r\n  value = value > 9 ? value : '0' + value\r\n  return encrypted.toString() + value\r\n}\r\nfunction Decrypt(word) {\r\n  var decrypt = CryptoJS.AES.decrypt(word, key, { mode: CryptoJS.mode.ECB, padding: CryptoJS.pad.Pkcs7 })\r\n  return CryptoJS.enc.Utf8.stringify(decrypt).toString()\r\n}\r\n\r\nasync function getEncryptKeyWord(keyword) {\r\n  // var date = new Date()\r\n  // var minute = date.getMinutes()\r\n  // var second = date.getSeconds()\r\n  // minute = minute > 9 ? minute : '0' + minute\r\n  // second = second > 9 ? second : '0' + second\r\n  // return Encrypt( Math.floor(Math.random() * 10) + keyword + Math.floor(Math.random() * 10))\r\n  // return Encrypt( minute + keyword + second)\r\n  return Encrypt(keyword)\r\n  // console.log(key)\r\n  // console.log(otherAPI.getKey())\r\n  // var key1 = await otherAPI.getKey()\r\n  // const key = CryptoJS.enc.Utf8.parse(key1.data)\r\n  // var srcs = CryptoJS.enc.Utf8.parse(keyword)\r\n  // var encrypted = CryptoJS.AES.encrypt(srcs, key, {mode:CryptoJS.mode.ECB, padding: CryptoJS.pad.Pkcs7})\r\n  // return encrypted.toString()\r\n}\r\n\r\nexport {\r\n  Decrypt,\r\n  Encrypt,\r\n  getEncryptKeyWord\r\n}\r\n"]}]}