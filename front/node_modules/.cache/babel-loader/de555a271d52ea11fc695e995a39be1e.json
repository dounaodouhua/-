{"remainingRequest":"D:\\Microsoft VS Code\\vs code\\软件项目管理\\大实例\\前后端源码\\front\\node_modules\\babel-loader\\lib\\index.js!D:\\Microsoft VS Code\\vs code\\软件项目管理\\大实例\\前后端源码\\front\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Microsoft VS Code\\vs code\\软件项目管理\\大实例\\前后端源码\\front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Microsoft VS Code\\vs code\\软件项目管理\\大实例\\前后端源码\\front\\src\\views\\dialogs\\DlgUserInfo.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Microsoft VS Code\\vs code\\软件项目管理\\大实例\\前后端源码\\front\\src\\views\\dialogs\\DlgUserInfo.vue","mtime":1741681638967},{"path":"D:\\Microsoft VS Code\\vs code\\软件项目管理\\大实例\\前后端源码\\front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Microsoft VS Code\\vs code\\软件项目管理\\大实例\\前后端源码\\front\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\Microsoft VS Code\\vs code\\软件项目管理\\大实例\\前后端源码\\front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Microsoft VS Code\\vs code\\软件项目管理\\大实例\\前后端源码\\front\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["DlgUserInfo.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div>\r\n    <!-- :simpledialog-confirm-more=\"confirmMore\" -->\r\n    <SimpleDialog ref=\"simpleDlg\" :default-props=\"defaultMainSDProps\" :simpledialog-confirm=\"confirm\" @update-record=\"updateRecord\">\r\n      <template slot=\"otherItems\">\r\n        <el-form-item label=\"角色\"><SimpleSelect ref=\"spsRole\" v-model=\"form.roleIds\" multiple key-words=\"SysRole\" @update-value=\"onSelRoles\" /></el-form-item>\r\n        <el-form-item v-if=\"isContestAdmin\" label=\"竞赛管理员\"><SimpleSelect ref=\"spsContestType1\" v-model=\"form.contestType1\" multiple key-words=\"BaseContestType\" :search-key=\"contestSearchKeys\" :auto-select=\"false\" @update-value=\"onSelContestType1\" /></el-form-item>\r\n        <el-form-item v-if=\"isUniversityAdmin\" label=\"校级管理员\"><SimpleSelect ref=\"spsContestType2\" v-model=\"form.contestType2\" multiple key-words=\"BaseContestType\" :search-key=\"universitySearchKeys\" :auto-select=\"false\" @update-value=\"onSelContestType2\" /></el-form-item>\r\n        <el-form-item v-if=\"isExpert\" label=\"专家\"><SimpleSelect ref=\"spsContestType3\" v-model=\"form.contestType3\" multiple key-words=\"BaseContestType\" :search-key=\"expertSearchKeys\" :auto-select=\"false\" @update-value=\"onSelContestType3\" /></el-form-item>\r\n      </template>\r\n    </SimpleDialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\nimport SimpleDialog from '@/components/SimpleDialog'\r\nimport SimpleSelect from '@/components/SimpleSelect'\r\nimport userAPI from '@/api/user.js'\r\nimport listAPI from '@/api/list'\r\nimport CONSTANT from '@/constant'\r\nimport _ from 'lodash'\r\nexport default {\r\n  components: { SimpleDialog, SimpleSelect },\r\n  props: {\r\n\r\n  },\r\n  data() {\r\n    return {\r\n      defaultMainSDProps: {\r\n        form: {},\r\n        keyWord: 'BaseUser',\r\n        formItems: [\r\n          { name: '账号', field: 'account', placeholder: '账号不能为空', type: 'input' },\r\n          { name: '密码', field: 'password', placeholder: '密码不能为空', type: 'password' },\r\n          { name: '身份证号', field: 'idCard', placeholder: '身份证号', type: 'input' },\r\n          { name: '姓名', field: 'name', placeholder: '姓名不能为空', type: 'input' },\r\n          { name: '性别', field: 'sex', type: 'select_noremote', options: [{ id: '男', name: '男' }, { id: '女', name: '女' }] },\r\n          { name: '单位部门', field: 'departmentId', keyWords: 'BaseDepartment', type: 'cascader' },\r\n          { name: '身份类型', field: 'jobId', keyWords: 'BaseJobPosition', type: 'select' },\r\n          { name: '手机号', field: 'phone', placeholder: '手机号不能为空', type: 'input' },\r\n          { name: '备注', field: 'remarks', type: 'textarea' }\r\n        ],\r\n        formRules: {\r\n          account: [{ required: true, message: '账号不能为空', trigger: 'blur' }],\r\n          // password: [{ required: true, message: '密码不能为空', trigger: 'blur' }],\r\n          phone: [{ required: true, message: '手机号不能为空', trigger: 'blur' }],\r\n          name: [{ required: true, message: '姓名不能为空', trigger: 'blur' }]\r\n        },\r\n        defaultDBProps: {\r\n\r\n        }\r\n      },\r\n      form: {},\r\n      contestSearchKeys: { theLevel: 2 },\r\n      universitySearchKeys: { theLevel: 2 },\r\n      expertSearchKeys: { theLevel: 2 },\r\n      isContestAdmin: false,\r\n      isUniversityAdmin: false,\r\n      isExpert: false\r\n    }\r\n  },\r\n  methods: {\r\n    async showDialog(val, form = {}) {\r\n      this.form = _.cloneDeep(form) // 打开的时候用cloneDeep，这样外层传的时候就直接传row就可以了\r\n      await this.initSomeValues(this.form.id)\r\n      this.$refs.simpleDlg.showDialog(val, this.form, true)\r\n    },\r\n    async getContestRelation(userId) {\r\n      // 根据角色情况初始化另外三个竞赛关联\r\n      if (this.form.roleIds.indexOf(CONSTANT.ROLE_TABLE.CONTEST_ADMIN) !== -1) {\r\n        this.isContestAdmin = true\r\n        const res2 = await listAPI.getSomeRecords({\r\n          keyWords: 'RelUserContestType',\r\n          searchKey: { userId: userId, roleId: CONSTANT.ROLE_TABLE.CONTEST_ADMIN }\r\n        })\r\n        if (res2.data.content.length > 0) {\r\n          this.$set(this.form, 'contestType1', res2.data.content.map(item => item.typeId))\r\n        } else {\r\n          this.$set(this.form, 'contestType1', null)\r\n        }\r\n      } else {\r\n        this.isContestAdmin = false\r\n      }\r\n      if (this.form.roleIds.indexOf(CONSTANT.ROLE_TABLE.UNIVERSITY_ADMIN) !== -1) {\r\n        this.isUniversityAdmin = true\r\n        const res2 = await listAPI.getSomeRecords({\r\n          keyWords: 'RelUserContestType',\r\n          searchKey: { userId: userId, roleId: CONSTANT.ROLE_TABLE.UNIVERSITY_ADMIN }\r\n        })\r\n        if (res2.data.content.length > 0) {\r\n          this.$set(this.form, 'contestType2', res2.data.content.map(item => item.typeId))\r\n        } else {\r\n          this.$set(this.form, 'contestType2', null)\r\n        }\r\n      } else {\r\n        this.isUniversityAdmin = false\r\n      }\r\n      if (this.form.roleIds.indexOf(CONSTANT.ROLE_TABLE.EXPERT) !== -1) {\r\n        this.isExpert = true\r\n        const res2 = await listAPI.getSomeRecords({\r\n          keyWords: 'RelUserContestType',\r\n          searchKey: { userId: userId, roleId: CONSTANT.ROLE_TABLE.EXPERT }\r\n        })\r\n        if (res2.data.content.length > 0) {\r\n          this.$set(this.form, 'contestType3', res2.data.content.map(item => item.typeId))\r\n        } else {\r\n          this.$set(this.form, 'contestType3', null)\r\n        }\r\n      } else {\r\n        this.isExpert = false\r\n      }\r\n    },\r\n    async initSomeValues(userId) {\r\n      if (userId) {\r\n        const res1 = await userAPI.getUserRoles(userId)\r\n        this.$set(this.form, 'roleIds', res1.data.map(item => item.id))\r\n        await this.getContestRelation(userId)\r\n      }\r\n      // 重新克隆oldData\r\n      // this.$refs.simpleDlg.reCloneOldData()\r\n    },\r\n    async updateRecord() {\r\n      this.$emit('update-record')\r\n    },\r\n    async confirm(option, type, form) {\r\n      await userAPI.editUserInfo(form.id, form)\r\n      await this.confirmMore(form)\r\n    },\r\n    async confirmMore(data) {\r\n      await userAPI.saveUserRoles(data.id, this.form.roleIds)\r\n      if (Object.prototype.hasOwnProperty.call(this.form, 'contestType1') && this.form.contestType1 !== undefined) {\r\n        await userAPI.saveUserContest(data.id, CONSTANT.ROLE_TABLE.CONTEST_ADMIN, this.form.contestType1)\r\n      }\r\n      if (Object.prototype.hasOwnProperty.call(this.form, 'contestType2') && this.form.contestType2 !== undefined) {\r\n        await userAPI.saveUserContest(data.id, CONSTANT.ROLE_TABLE.UNIVERSITY_ADMIN, this.form.contestType2)\r\n      }\r\n      if (Object.prototype.hasOwnProperty.call(this.form, 'contestType3') && this.form.contestType3 !== undefined) {\r\n        await userAPI.saveUserContest(data.id, CONSTANT.ROLE_TABLE.EXPERT, this.form.contestType3)\r\n      }\r\n    },\r\n\r\n    onSelRoles(val) {\r\n      this.$set(this.form, 'roleIds', val)\r\n      this.getContestRelation(this.form.id)\r\n    },\r\n    async onSelContestType1(val) {\r\n      this.form.contestType1 = val\r\n    },\r\n    async onSelContestType2(val) {\r\n      this.form.contestType2 = val\r\n    },\r\n    async onSelContestType3(val) {\r\n      this.form.contestType3 = val\r\n    }\r\n  }\r\n}\r\n</script>\r\n"],"sourceRoot":"src/views/dialogs"}]}