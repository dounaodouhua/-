{"remainingRequest":"D:\\Microsoft VS Code\\vs code\\软件项目管理\\大实例\\前后端源码\\front\\node_modules\\babel-loader\\lib\\index.js!D:\\Microsoft VS Code\\vs code\\软件项目管理\\大实例\\前后端源码\\front\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Microsoft VS Code\\vs code\\软件项目管理\\大实例\\前后端源码\\front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Microsoft VS Code\\vs code\\软件项目管理\\大实例\\前后端源码\\front\\src\\components\\SimpleSelect.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Microsoft VS Code\\vs code\\软件项目管理\\大实例\\前后端源码\\front\\src\\components\\SimpleSelect.vue","mtime":1741681638500},{"path":"D:\\Microsoft VS Code\\vs code\\软件项目管理\\大实例\\前后端源码\\front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Microsoft VS Code\\vs code\\软件项目管理\\大实例\\前后端源码\\front\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\Microsoft VS Code\\vs code\\软件项目管理\\大实例\\前后端源码\\front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Microsoft VS Code\\vs code\\软件项目管理\\大实例\\前后端源码\\front\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2guanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5pbmNsdWRlcy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5Lm1hcC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm51bWJlci5jb25zdHJ1Y3Rvci5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5pbmNsdWRlcy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuZm9yLWVhY2guanMiOwppbXBvcnQgX3R5cGVvZiBmcm9tICJEOi9NaWNyb3NvZnQgVlMgQ29kZS92cyBjb2RlL1x1OEY2Rlx1NEVGNlx1OTg3OVx1NzZFRVx1N0JBMVx1NzQwNi9cdTU5MjdcdTVCOUVcdTRGOEIvXHU1MjREXHU1NDBFXHU3QUVGXHU2RTkwXHU3ODAxL2Zyb250L25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS90eXBlb2YiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZS5qcyI7CmltcG9ydCBfYXN5bmNUb0dlbmVyYXRvciBmcm9tICJEOi9NaWNyb3NvZnQgVlMgQ29kZS92cyBjb2RlL1x1OEY2Rlx1NEVGNlx1OTg3OVx1NzZFRVx1N0JBMVx1NzQwNi9cdTU5MjdcdTVCOUVcdTRGOEIvXHU1MjREXHU1NDBFXHU3QUVGXHU2RTkwXHU3ODAxL2Zyb250L25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IGxpc3RBUEkgZnJvbSAnQC9hcGkvbGlzdCc7CmltcG9ydCBfIGZyb20gJ2xvZGFzaCc7CmV4cG9ydCBkZWZhdWx0IHsKICBwcm9wczogewogICAgdmFsdWU6IHsKICAgICAgdHlwZTogW051bWJlciwgU3RyaW5nLCBBcnJheV0sCiAgICAgIGRlZmF1bHQ6IGZ1bmN0aW9uIF9kZWZhdWx0KCkgewogICAgICAgIHJldHVybiBudWxsOwogICAgICB9CiAgICB9LAogICAgZmllbGQ6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICBkZWZhdWx0OiAnJwogICAgfSwKICAgIGtleVdvcmRzOiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgZGVmYXVsdDogJycKICAgIH0sCiAgICBtdWx0aXBsZTogewogICAgICB0eXBlOiBCb29sZWFuLAogICAgICBkZWZhdWx0OiBmdW5jdGlvbiBfZGVmYXVsdCgpIHsKICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgIH0KICAgIH0sCiAgICBwbGFjZWhvbGRlcjogewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgIGRlZmF1bHQ6ICfor7fpgInmi6knCiAgICB9LAogICAgc2VhcmNoS2V5OiB7CiAgICAgIHR5cGU6IE9iamVjdCwKICAgICAgZGVmYXVsdDogZnVuY3Rpb24gX2RlZmF1bHQoKSB7CiAgICAgICAgcmV0dXJuIHt9OwogICAgICB9CiAgICB9LAogICAgcmVnS2V5OiB7CiAgICAgIHR5cGU6IE9iamVjdCwKICAgICAgZGVmYXVsdDogZnVuY3Rpb24gX2RlZmF1bHQoKSB7CiAgICAgICAgcmV0dXJuIHt9OwogICAgICB9CiAgICB9LAogICAgc29ydEpzb246IHsKICAgICAgdHlwZTogT2JqZWN0LAogICAgICBkZWZhdWx0OiBmdW5jdGlvbiBfZGVmYXVsdCgpIHsKICAgICAgICByZXR1cm4gewogICAgICAgICAgcHJvcGVydGllczogJ1RoZU9yZGVyJywKICAgICAgICAgIGRpcmVjdGlvbjogJ0FTQycKICAgICAgICB9OwogICAgICB9CiAgICB9LAogICAgc2l6ZTogewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgIGRlZmF1bHQ6ICcnCiAgICB9LAogICAgZmlsdGVyYWJsZTogewogICAgICB0eXBlOiBCb29sZWFuLAogICAgICBkZWZhdWx0OiBmYWxzZQogICAgfSwKICAgIGF1dG9Jbml0OiB7CiAgICAgIHR5cGU6IEJvb2xlYW4sCiAgICAgIGRlZmF1bHQ6IHRydWUKICAgIH0sCiAgICBkaXNhYmxlZDogewogICAgICB0eXBlOiBCb29sZWFuLAogICAgICBkZWZhdWx0OiBmYWxzZQogICAgfSwKICAgIGF1dG9TZWxlY3Q6IHsKICAgICAgdHlwZTogQm9vbGVhbiwKICAgICAgZGVmYXVsdDogdHJ1ZQogICAgfSwKICAgIGNoYW5nZUxhYmVsOiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgZGVmYXVsdDogJycKICAgIH0KICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBvcHRpb25zOiBbXSwKICAgICAgbG9hZGluZzogZmFsc2UsCiAgICAgIHNlbGVjdFZhbHVlOiB0aGlzLnZhbHVlCiAgICB9OwogIH0sCiAgY29tcHV0ZWQ6IHsvLyBzZWxlY3RWYWx1ZTogewogICAgLy8gICBnZXQ6IGZ1bmN0aW9uKCkgewogICAgLy8gICAgIHJldHVybiB0aGlzLnZhbHVlCiAgICAvLyAgIH0sCiAgICAvLyAgIHNldDogZnVuY3Rpb24odmFsKSB7CiAgICAvLyAgICAgLy90aGlzLnZhbHVlID0gdmFsCiAgICAvLyAgIH0KICAgIC8vIH0KICB9LAogIHdhdGNoOiB7CiAgICB2YWx1ZTogewogICAgICBoYW5kbGVyOiBmdW5jdGlvbiBoYW5kbGVyKHZhbCkgewogICAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICAgIGlmICghX3RoaXMuYXV0b0luaXQpIHsKICAgICAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNDsKICAgICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgICAgaWYgKCEoIV90aGlzLm9wdGlvbnMgfHwgX3RoaXMub3B0aW9ucy5sZW5ndGggPT09IDApKSB7CiAgICAgICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDQ7CiAgICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA0OwogICAgICAgICAgICAgICAgICByZXR1cm4gX3RoaXMuaW5pdE9wdGlvbnMoKTsKCiAgICAgICAgICAgICAgICBjYXNlIDQ6CiAgICAgICAgICAgICAgICAgIF90aGlzLmNoYW5nZVNlbGVjdGlvbigpOwoKICAgICAgICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICB9LCBfY2FsbGVlKTsKICAgICAgICB9KSkoKTsKICAgICAgfSwKICAgICAgaW1tZWRpYXRlOiB0cnVlCiAgICB9LAogICAgc2VhcmNoS2V5OiB7CiAgICAgIGhhbmRsZXI6IGZ1bmN0aW9uIGhhbmRsZXIodmFsKSB7CiAgICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUyKCkgewogICAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUyJChfY29udGV4dDIpIHsKICAgICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0Mi5wcmV2ID0gX2NvbnRleHQyLm5leHQpIHsKICAgICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSAyOwogICAgICAgICAgICAgICAgICByZXR1cm4gX3RoaXMyLmluaXRPcHRpb25zKCk7CgogICAgICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDQ7CiAgICAgICAgICAgICAgICAgIHJldHVybiBfdGhpczIuY2hhbmdlU2VsZWN0aW9uKCk7CgogICAgICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5zdG9wKCk7CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICB9LCBfY2FsbGVlMik7CiAgICAgICAgfSkpKCk7CiAgICAgIH0sCiAgICAgIGRlZXA6IHRydWUsCiAgICAgIGltbWVkaWF0ZTogdHJ1ZQogICAgfQogIH0sCiAgY3JlYXRlZDogZnVuY3Rpb24gY3JlYXRlZCgpIHsKICAgIGlmICh0aGlzLmF1dG9Jbml0KSB7CiAgICAgIHRoaXMuaW5pdE9wdGlvbnMoKTsKICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIGNoYW5nZVNlbGVjdGlvbjogZnVuY3Rpb24gY2hhbmdlU2VsZWN0aW9uKHZhbCkgewogICAgICB2YXIgX3RoaXMzID0gdGhpczsKCiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUzKCkgewogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMyQoX2NvbnRleHQzKSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0My5wcmV2ID0gX2NvbnRleHQzLm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBpZiAoIShfdGhpczMub3B0aW9ucy5sZW5ndGggPT09IDApKSB7CiAgICAgICAgICAgICAgICAgIF9jb250ZXh0My5uZXh0ID0gMzsKICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgX2NvbnRleHQzLm5leHQgPSAzOwogICAgICAgICAgICAgICAgcmV0dXJuIF90aGlzMy5pbml0T3B0aW9ucygpOwoKICAgICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgICBpZiAodmFsICE9IG51bGwpIHsKICAgICAgICAgICAgICAgICAgX3RoaXMzLnNlbGVjdFZhbHVlID0gdmFsOwogICAgICAgICAgICAgICAgfSBlbHNlIGlmIChfdGhpczMudmFsdWUgIT0gbnVsbCkgewogICAgICAgICAgICAgICAgICBpZiAoX3RoaXMzLm11bHRpcGxlICYmIF90eXBlb2YoX3RoaXMzLnZhbHVlKSA9PT0gJ29iamVjdCcpIHsKICAgICAgICAgICAgICAgICAgICBfdGhpczMuc2VsZWN0VmFsdWUgPSBfdGhpczMudmFsdWUuZmlsdGVyKGZ1bmN0aW9uIChpdGVtKSB7CiAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gX3RoaXMzLm9wdGlvbnMubWFwKGZ1bmN0aW9uIChpdGVtMikgewogICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gaXRlbTIuaWQ7CiAgICAgICAgICAgICAgICAgICAgICB9KS5pbmNsdWRlcyhpdGVtKTsKICAgICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgICBpZiAoX3RoaXMzLm9wdGlvbnMubWFwKGZ1bmN0aW9uIChpdGVtKSB7CiAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gaXRlbS5pZDsKICAgICAgICAgICAgICAgICAgICB9KS5pbmNsdWRlcyhwYXJzZUludChfdGhpczMudmFsdWUpKSkgewogICAgICAgICAgICAgICAgICAgICAgX3RoaXMzLnNlbGVjdFZhbHVlID0gcGFyc2VJbnQoX3RoaXMzLnZhbHVlKTsKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgIF90aGlzMy5zZWxlY3RWYWx1ZSA9IG51bGw7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgIGNhc2UgNDoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0My5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlMyk7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIGluaXRPcHRpb25zOiBmdW5jdGlvbiBpbml0T3B0aW9ucygpIHsKICAgICAgdmFyIF90aGlzNCA9IHRoaXM7CgogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlNCgpIHsKICAgICAgICB2YXIgcmVzcDsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTQkKF9jb250ZXh0NCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDQucHJldiA9IF9jb250ZXh0NC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgX3RoaXM0LmxvYWRpbmcgPSB0cnVlOwogICAgICAgICAgICAgICAgX2NvbnRleHQ0LnByZXYgPSAxOwogICAgICAgICAgICAgICAgX2NvbnRleHQ0Lm5leHQgPSA0OwogICAgICAgICAgICAgICAgcmV0dXJuIGxpc3RBUEkuZ2V0U29tZVJlY29yZHMoewogICAgICAgICAgICAgICAgICBrZXlXb3JkczogX3RoaXM0LmtleVdvcmRzLAogICAgICAgICAgICAgICAgICBzZWFyY2hLZXk6IF90aGlzNC5zZWFyY2hLZXksCiAgICAgICAgICAgICAgICAgIHNvcnQ6IF90aGlzNC5zb3J0SnNvbiwKICAgICAgICAgICAgICAgICAgcmVnOiBfdGhpczQucmVnS2V5CiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICAgICAgcmVzcCA9IF9jb250ZXh0NC5zZW50OwogICAgICAgICAgICAgICAgX3RoaXM0Lm9wdGlvbnMgPSBfLmNsb25lRGVlcChyZXNwLmRhdGEuY29udGVudCk7CgogICAgICAgICAgICAgICAgaWYgKF90aGlzNC5jaGFuZ2VMYWJlbCAhPT0gJycpIHsKICAgICAgICAgICAgICAgICAgX3RoaXM0Lm9wdGlvbnMuZm9yRWFjaChmdW5jdGlvbiAoaXRlbSkgewogICAgICAgICAgICAgICAgICAgIF90aGlzNC4kc2V0KGl0ZW0sICduYW1lJywgaXRlbVtfdGhpczQuY2hhbmdlTGFiZWxdKTsKICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgX3RoaXM0LiRlbWl0KCdpbml0LWZpbmlzaCcsIF90aGlzNC5maWVsZCwgX3RoaXM0Lm9wdGlvbnMpOwoKICAgICAgICAgICAgICAgIF9jb250ZXh0NC5uZXh0ID0gMTM7CiAgICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgICAgY2FzZSAxMDoKICAgICAgICAgICAgICAgIF9jb250ZXh0NC5wcmV2ID0gMTA7CiAgICAgICAgICAgICAgICBfY29udGV4dDQudDAgPSBfY29udGV4dDRbImNhdGNoIl0oMSk7CiAgICAgICAgICAgICAgICBfdGhpczQubG9hZGluZyA9IGZhbHNlOwoKICAgICAgICAgICAgICBjYXNlIDEzOgogICAgICAgICAgICAgICAgaWYgKF90aGlzNC5hdXRvU2VsZWN0KSB7CiAgICAgICAgICAgICAgICAgIGlmIChfdGhpczQuc2VsZWN0VmFsdWUgPT0gbnVsbCAmJiBfdGhpczQub3B0aW9ucy5sZW5ndGggPiAwKSB7CiAgICAgICAgICAgICAgICAgICAgX3RoaXM0LnNlbGVjdFZhbHVlID0gX3RoaXM0Lm9wdGlvbnNbMF0uaWQ7CgogICAgICAgICAgICAgICAgICAgIF90aGlzNC4kZW1pdCgndXBkYXRlLXZhbHVlJywgX3RoaXM0LnNlbGVjdFZhbHVlLCBfdGhpczQuZmllbGQsIF90aGlzNC5vcHRpb25zLmZpbHRlcihmdW5jdGlvbiAodmFsdWUsIGluZGV4KSB7CiAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gdmFsdWUuaWQgPT09IF90aGlzNC5zZWxlY3RWYWx1ZTsKICAgICAgICAgICAgICAgICAgICB9KSk7CiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICBfdGhpczQubG9hZGluZyA9IGZhbHNlOwoKICAgICAgICAgICAgICBjYXNlIDE1OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWU0LCBudWxsLCBbWzEsIDEwXV0pOwogICAgICB9KSkoKTsKICAgIH0sCiAgICBoYW5kbGVDaGFuZ2U6IGZ1bmN0aW9uIGhhbmRsZUNoYW5nZSh2YWwpIHsKICAgICAgdGhpcy4kZW1pdCgndXBkYXRlLXZhbHVlJywgdmFsLCB0aGlzLmZpZWxkLCB0aGlzLm9wdGlvbnMuZmlsdGVyKGZ1bmN0aW9uICh2YWx1ZSwgaW5kZXgpIHsKICAgICAgICByZXR1cm4gdmFsdWUuaWQgPT09IHZhbDsKICAgICAgfSkpOwogICAgfQogIH0KfTs="},{"version":3,"sources":["SimpleSelect.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div>\r\n    <el-select v-model=\"selectValue\" v-loading=\"loading\" class=\"simple-select\" :placeholder=\"placeholder\" :size=\"size\" :multiple=\"multiple\" :disabled=\"disabled\" :filterable=\"filterable\" @change=\"handleChange\">\r\n      <el-option v-for=\"item in options\" :key=\"item.id\" :label=\"item.name\" :value=\"item.id\" :value-key=\"item.id\" />\r\n    </el-select>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport listAPI from '@/api/list'\r\nimport _ from 'lodash'\r\nexport default {\r\n  props: {\r\n    value: { type: [Number, String, Array], default: () => null },\r\n    field: { type: String, default: '' },\r\n    keyWords: { type: String, default: '' },\r\n    multiple: { type: Boolean, default: () => false },\r\n    placeholder: { type: String, default: '请选择' },\r\n    searchKey: { type: Object, default: () => ({}) },\r\n    regKey: { type: Object, default: () => ({}) },\r\n    sortJson: { type: Object, default: () => ({ properties: 'TheOrder', direction: 'ASC' }) },\r\n    size: { type: String, default: '' },\r\n    filterable: { type: Boolean, default: false },\r\n    autoInit: { type: Boolean, default: true },\r\n    disabled: { type: Boolean, default: false },\r\n    autoSelect: { type: Boolean, default: true },\r\n    changeLabel: { type: String, default: '' }\r\n  },\r\n  data() {\r\n    return {\r\n      options: [],\r\n      loading: false,\r\n      selectValue: this.value\r\n    }\r\n  },\r\n  computed: {\r\n    // selectValue: {\r\n    //   get: function() {\r\n    //     return this.value\r\n    //   },\r\n    //   set: function(val) {\r\n    //     //this.value = val\r\n    //   }\r\n    // }\r\n  },\r\n  watch: {\r\n    value: {\r\n      async handler(val) {\r\n        if (this.autoInit) {\r\n          if (!(this.options) || (this.options.length === 0)) {\r\n            await this.initOptions()\r\n          }\r\n        }\r\n        this.changeSelection()\r\n      },\r\n      immediate: true\r\n    },\r\n    searchKey: {\r\n      async handler(val) {\r\n        await this.initOptions()\r\n        await this.changeSelection()\r\n      },\r\n      deep: true,\r\n      immediate: true\r\n    }\r\n  },\r\n  created() {\r\n    if (this.autoInit) {\r\n      this.initOptions()\r\n    }\r\n  },\r\n  methods: {\r\n    async changeSelection(val) {\r\n      if (this.options.length === 0) {\r\n        await this.initOptions()\r\n      }\r\n      if (val != null) {\r\n        this.selectValue = val\r\n      } else if (this.value != null) {\r\n        if (this.multiple && typeof this.value === 'object') {\r\n          this.selectValue = this.value.filter(item => this.options.map(item2 => item2.id).includes(item))\r\n        } else {\r\n          if (this.options.map(item => item.id).includes(parseInt(this.value))) {\r\n            this.selectValue = parseInt(this.value)\r\n          }\r\n        }\r\n      } else {\r\n        this.selectValue = null\r\n      }\r\n    },\r\n    async initOptions() {\r\n      this.loading = true\r\n      try {\r\n        const resp = await listAPI.getSomeRecords({\r\n          keyWords: this.keyWords,\r\n          searchKey: this.searchKey,\r\n          sort: this.sortJson,\r\n          reg: this.regKey\r\n        })\r\n        this.options = _.cloneDeep(resp.data.content)\r\n        if (this.changeLabel !== '') {\r\n          this.options.forEach(item => {\r\n            this.$set(item, 'name', item[this.changeLabel])\r\n          })\r\n        }\r\n        this.$emit('init-finish', this.field, this.options)\r\n      } catch (error) {\r\n        this.loading = false\r\n      }\r\n      if (this.autoSelect) {\r\n        if (this.selectValue == null && this.options.length > 0) {\r\n          this.selectValue = this.options[0].id\r\n          this.$emit('update-value', this.selectValue, this.field, this.options.filter((value, index) => { return value.id === this.selectValue }))\r\n        }\r\n      }\r\n      this.loading = false\r\n    },\r\n    handleChange(val) {\r\n      this.$emit('update-value', val, this.field, this.options.filter((value, index) => { return value.id === val }))\r\n    }\r\n  }\r\n}\r\n</script>\r\n"],"sourceRoot":"src/components"}]}