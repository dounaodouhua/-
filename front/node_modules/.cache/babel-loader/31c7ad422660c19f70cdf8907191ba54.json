{"remainingRequest":"D:\\Microsoft VS Code\\vs code\\软件项目管理\\大实例\\前后端源码\\front\\node_modules\\babel-loader\\lib\\index.js!D:\\Microsoft VS Code\\vs code\\软件项目管理\\大实例\\前后端源码\\front\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Microsoft VS Code\\vs code\\软件项目管理\\大实例\\前后端源码\\front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Microsoft VS Code\\vs code\\软件项目管理\\大实例\\前后端源码\\front\\src\\views\\system-manage\\Role.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Microsoft VS Code\\vs code\\软件项目管理\\大实例\\前后端源码\\front\\src\\views\\system-manage\\Role.vue","mtime":1741681639028},{"path":"D:\\Microsoft VS Code\\vs code\\软件项目管理\\大实例\\前后端源码\\front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Microsoft VS Code\\vs code\\软件项目管理\\大实例\\前后端源码\\front\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\Microsoft VS Code\\vs code\\软件项目管理\\大实例\\前后端源码\\front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Microsoft VS Code\\vs code\\软件项目管理\\大实例\\前后端源码\\front\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Role.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"box-flex\">\r\n      <div style=\"width: 45%\">\r\n        <BaseList :default-props=\"defaultBLProps\" @update-column=\"updateColumn\" />\r\n      </div>\r\n      <!-- 列表右侧-->\r\n      <div style=\"width:53%; \">\r\n        <el-card shadow=\"never\">\r\n          <div slot=\"header\">\r\n            <span title=\"选择指定角色分配菜单\">角色授权 | <strong>{{ currentColumn.name || \"--\" }}</strong></span>\r\n            <el-button :disabled=\"!currentColumn\" :loading=\"saveLoading\" size=\"mini\" style=\"float: right;padding: 6px 9px;margin-top:-5px\" type=\"primary\" :title=\"currentColumn ? '' : '请在左边列表选择一个角色'\" @click=\"saveRoleMenus\">保存</el-button>\r\n          </div>\r\n          <el-table ref=\"dataTree\" v-adaptive=\"{ noPage: true }\" v-loading=\"loading\" :data=\"treeData\" height=\"100%\" row-key=\"id\" :expand-row-keys=\"['-1']\">\r\n            <el-table-column prop=\"name\" label=\"名称\" width=\"150\" :show-overflow-tooltip=\"true\" />\r\n            <el-table-column label=\"查询\">\r\n              <template slot-scope=\"scope\">\r\n                <el-checkbox v-model=\"scope.row.authorizationInfo.visibleFlag\" @change=\"handleSingleChange( scope.row.authorizationInfo, scope, 'visibleFlag' )\" />\r\n              </template>\r\n            </el-table-column>\r\n            <el-table-column label=\"添加\">\r\n              <template slot-scope=\"scope\">\r\n                <el-checkbox v-model=\"scope.row.authorizationInfo.addFlag\" @change=\"handleSingleChange(scope.row.authorizationInfo,scope,'addFlag' )\" />\r\n              </template>\r\n            </el-table-column>\r\n            <el-table-column label=\"修改\">\r\n              <template slot-scope=\"scope\">\r\n                <el-checkbox v-model=\"scope.row.authorizationInfo.modifyFlag\" @change=\"handleSingleChange( scope.row.authorizationInfo, scope, 'modifyFlag' )\" />\r\n              </template>\r\n            </el-table-column>\r\n            <el-table-column label=\"删除\">\r\n              <template slot-scope=\"scope\">\r\n                <el-checkbox v-model=\"scope.row.authorizationInfo.deleteFlag\" @change=\" handleSingleChange( scope.row.authorizationInfo, scope, 'deleteFlag' )\" />\r\n              </template>\r\n            </el-table-column>\r\n            <el-table-column label=\"全部\">\r\n              <template slot-scope=\"scope\">\r\n                <el-checkbox v-model=\"scope.row.authorizationAllFlag\" :indeterminate=\" (\r\n                  scope.row.authorizationInfo.visibleFlag | scope.row.authorizationInfo.addFlag ||scope.row.authorizationInfo.modifyFlag || scope.row.authorizationInfo.deleteFlag)\r\n                  && !scope.row.authorizationAllFlag\" @change=\"handleCheckAllChange(scope.row.authorizationInfo, scope.row)\" />\r\n              </template>\r\n            </el-table-column>\r\n          </el-table>\r\n        </el-card>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nimport roleAPI from '@/api/role'\r\nimport BaseList from '@/views/master-page/BaseList'\r\nimport adaptive from '@/directive/el-table'\r\nexport default {\r\n  name: 'Role',\r\n  components: { BaseList },\r\n  directives: { adaptive },\r\n  data() {\r\n    return {\r\n      // title=\"角色列表\" :curd=\"curd\" :edit-key-words=\"editKeyWords\" :view-key-words=\"editKeyWords\"\r\n      defaultBLProps: {\r\n        defaultDTLProps: {\r\n          sortStr: { properties: 'theOrder', direction: 'ASC' }, // 排序方法\r\n          title: { mainTitle: '角色列表' },\r\n          defaultDTHProps: {\r\n            keyWord: { edit: 'SysRole' }\r\n          }\r\n        },\r\n        defaultSDProps: {\r\n          keyWord: 'SysRole',\r\n          defaultDBProps: {\r\n            dialog: {}\r\n          }\r\n        }\r\n      },\r\n\r\n      treeData: [],\r\n      currentColumn: '',\r\n      parentArr: [],\r\n      loading: false,\r\n      saveLoading: false\r\n    }\r\n  },\r\n\r\n  watch: {\r\n    'currentColumn.id'(val) {\r\n      this.initDataTree()\r\n    }\r\n  },\r\n\r\n  methods: {\r\n    async initDataTree() {\r\n      if (this.currentColumn.id) {\r\n        try {\r\n          this.loading = true\r\n          const resp = await roleAPI.getRolePermissions(this.currentColumn.id)\r\n          this.treeData = resp.data\r\n          this.initAllNodes()\r\n          this.loading = false\r\n        } catch (error) {\r\n          this.loading = false\r\n        }\r\n      }\r\n    },\r\n    // 初始化所有节点信息\r\n    initAllNodes() {\r\n      this.treeData[0].authorizationInfo.visibleFlag = true\r\n      this.treeData[0].authorizationInfo.addFlag = true\r\n      this.treeData[0].authorizationInfo.modifyFlag = true\r\n      this.treeData[0].authorizationInfo.deleteFlag = true\r\n      this.treeData[0].authorizationAllFlag = true\r\n      this.initCallFunc(this.treeData, 'authorizationAllFlag')\r\n      this.initCallFunc(this.treeData, 'visibleFlag')\r\n      this.initCallFunc(this.treeData, 'addFlag')\r\n      this.initCallFunc(this.treeData, 'modifyFlag')\r\n      this.initCallFunc(this.treeData, 'deleteFlag')\r\n    },\r\n    // 增删改查的联动\r\n    initCallFunc(val = this.treeData, prop) {\r\n      if (prop === 'authorizationAllFlag') {\r\n        val.forEach(e => {\r\n          if (e[prop] === false) {\r\n            return (this.treeData[0][prop] = false)\r\n          }\r\n          if (e.children && e.children.length) {\r\n            this.initCallFunc(e.children, prop)\r\n          }\r\n        })\r\n      } else {\r\n        val.forEach(e => {\r\n          if (e.authorizationInfo[prop] === false) {\r\n            return (this.treeData[0].authorizationInfo[prop] = false)\r\n          }\r\n          if (e.children && e.children.length) {\r\n            this.initCallFunc(e.children, prop)\r\n          }\r\n        })\r\n      }\r\n    },\r\n    // 回调循环函数\r\n    allCallFunc(val, status) {\r\n      if (val.children && val.children.length > 0) {\r\n        val.children.forEach(e => {\r\n          e.authorizationAllFlag = status\r\n          e.authorizationInfo.visibleFlag = e.authorizationInfo.addFlag = e.authorizationInfo.modifyFlag = e.authorizationInfo.deleteFlag = status\r\n          this.allCallFunc(e, status)\r\n        })\r\n      }\r\n      const pids = []\r\n      this.getParentNodes(this.treeData, val.id, pids)\r\n      this.parentNodesChange(this.treeData, pids, val)\r\n    },\r\n    // 单个回调函数\r\n    singleCallFunc(val, prop) {\r\n      if (val.children && val.children.length > 0) {\r\n        val.children.forEach(e => {\r\n          prop === 'visibleFlag' ? (e.authorizationInfo.visibleFlag = val.authorizationInfo.visibleFlag) : ''\r\n          prop === 'addFlag' ? (e.authorizationInfo.addFlag = val.authorizationInfo.addFlag) : ''\r\n          prop === 'modifyFlag' ? (e.authorizationInfo.modifyFlag = val.authorizationInfo.modifyFlag) : ''\r\n          prop === 'deleteFlag' ? (e.authorizationInfo.deleteFlag = val.authorizationInfo.deleteFlag) : ''\r\n\r\n          // 更新全选-非全选的内容\r\n          e.authorizationAllFlag = false\r\n          if (\r\n            e.authorizationInfo.visibleFlag === true && e.authorizationInfo.addFlag === true &&\r\n            e.authorizationInfo.modifyFlag === true && e.authorizationInfo.deleteFlag === true\r\n          ) {\r\n            e.authorizationAllFlag = true\r\n          } else if (\r\n            val.authorizationInfo.visibleFlag === false && val.authorizationInfo.addFlag === false &&\r\n            val.authorizationInfo.modifyFlag === false && val.authorizationInfo.deleteFlag === false\r\n          ) {\r\n            e.authorizationAllFlag = false\r\n          }\r\n          this.singleCallFunc(e, prop)\r\n        })\r\n      }\r\n      const pids = []\r\n      this.getParentNodes(this.treeData, val.id, pids)\r\n      this.parentNodesChange(this.treeData, pids, val)\r\n    },\r\n    // 当前行的改变\r\n    updateColumn(val) {\r\n      this.currentColumn = val\r\n    },\r\n    // 获取每层父节点的节点数组\r\n    getParentNodes(val, id, arr) {\r\n      val.forEach(e => {\r\n        if (e.id === id) {\r\n          if (e.parentId) {\r\n            // 排除顶级虚节点id=-1\r\n            arr.push(e.parentId)\r\n          }\r\n          this.getParentNodes(this.treeData, e.parentId, arr)\r\n        } else {\r\n          if (e.children && e.children.length) {\r\n            this.getParentNodes(e.children, id, arr)\r\n          }\r\n        }\r\n      })\r\n    },\r\n    parentNodesChange(arr, pids, val) {\r\n      arr.forEach(e => {\r\n        if (pids.indexOf(e.id) > -1) {\r\n          val.authorizationInfo.visibleFlag ? (e.authorizationInfo.visibleFlag = true) : ''\r\n          val.authorizationInfo.addFlag ? (e.authorizationInfo.addFlag = true) : ''\r\n          val.authorizationInfo.modifyFlag ? (e.authorizationInfo.modifyFlag = true) : ''\r\n          val.authorizationInfo.deleteFlag ? (e.authorizationInfo.deleteFlag = true) : ''\r\n          e.authorizationAllFlag = false\r\n          if (\r\n            e.authorizationInfo.visibleFlag === true && e.authorizationInfo.addFlag === true &&\r\n            e.authorizationInfo.modifyFlag === true && e.authorizationInfo.deleteFlag === true\r\n          ) {\r\n            e.authorizationAllFlag = true\r\n          } else if (\r\n            val.authorizationInfo.visibleFlag === false && val.authorizationInfo.addFlag === false &&\r\n            val.authorizationInfo.modifyFlag === false && val.authorizationInfo.deleteFlag === false\r\n          ) {\r\n            e.authorizationAllFlag = false\r\n          }\r\n        }\r\n        if (e.children && e.children.length) {\r\n          this.parentNodesChange(e.children, pids, val)\r\n        }\r\n      })\r\n    },\r\n    // 树节点的联动\r\n    parentNodeChange(val) {\r\n      if (val.children && val.children.length) {\r\n        val.children.forEach(child => {\r\n          if (child.authorizationInfo.visibleFlag === true) {\r\n            return (val.authorizationInfo.visibleFlag = true)\r\n          } else {\r\n            this.parentNodeChange(child)\r\n          }\r\n        })\r\n      }\r\n    },\r\n    // 全选\r\n    handleCheckAllChange(val, val2) {\r\n      if (val2.authorizationAllFlag) {\r\n        val.visibleFlag = val.addFlag = val.modifyFlag = val.deleteFlag = true\r\n        this.allCallFunc(val2, true)\r\n      } else {\r\n        val.visibleFlag = val.addFlag = val.modifyFlag = val.deleteFlag = false\r\n        this.allCallFunc(val2, false)\r\n      }\r\n      this.treeData[0].authorizationAllFlag = true\r\n      this.initAllNodes()\r\n    },\r\n    // 改变单个框的变化\r\n    handleSingleChange(val, val2, prop) {\r\n      val2.row.authorizationAllFlag = false\r\n      if (\r\n        val.visibleFlag === true && val.addFlag === true && val.modifyFlag === true && val.deleteFlag === true\r\n      ) {\r\n        // 使用scope.row直接赋值没有效果\r\n        val2.row.authorizationAllFlag = true\r\n      } else if (\r\n        val.visibleFlag === false && val.addFlag === false && val.modifyFlag === false && val.deleteFlag === false\r\n      ) {\r\n        val2.row.authorizationAllFlag = false\r\n      }\r\n\r\n      this.singleCallFunc(val2.row, prop)\r\n      this.treeData[0].authorizationAllFlag = true\r\n      this.initAllNodes()\r\n    },\r\n\r\n    // 保存权限\r\n    async saveRoleMenus() {\r\n      try {\r\n        this.saveLoading = true\r\n        await roleAPI.editRolePermission(this.currentColumn.id, this.treeData[0])\r\n        this.saveLoading = false\r\n        this.$message.success('保存成功！')\r\n      } catch (error) {\r\n        this.saveLoading = false\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n::v-deep .el-card__body {\r\n  padding: 0;\r\n}\r\n.box-flex {\r\n  display: flex;\r\n  justify-content: space-between;\r\n}\r\n</style>\r\n"],"sourceRoot":"src/views/system-manage"}]}