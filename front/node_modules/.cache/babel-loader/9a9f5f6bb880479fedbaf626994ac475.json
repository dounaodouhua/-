{"remainingRequest":"D:\\Microsoft VS Code\\vs code\\软件项目管理\\大实例\\前后端源码\\front\\node_modules\\babel-loader\\lib\\index.js!D:\\Microsoft VS Code\\vs code\\软件项目管理\\大实例\\前后端源码\\front\\src\\api\\other.js","dependencies":[{"path":"D:\\Microsoft VS Code\\vs code\\软件项目管理\\大实例\\前后端源码\\front\\src\\api\\other.js","mtime":1741681637570},{"path":"D:\\Microsoft VS Code\\vs code\\软件项目管理\\大实例\\前后端源码\\front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Microsoft VS Code\\vs code\\软件项目管理\\大实例\\前后端源码\\front\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuam9pbi5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC5leGVjLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnNwbGl0LmpzIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanMiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiRDovTWljcm9zb2Z0IFZTIENvZGUvdnMgY29kZS9cdThGNkZcdTRFRjZcdTk4NzlcdTc2RUVcdTdCQTFcdTc0MDYvXHU1OTI3XHU1QjlFXHU0RjhCL1x1NTI0RFx1NTQwRVx1N0FFRlx1NkU5MFx1NzgwMS9mcm9udC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCByZXF1ZXN0IGZyb20gJ0AvdXRpbHMvcmVxdWVzdCc7CmltcG9ydCB7IGdldEVuY3J5cHRLZXlXb3JkIH0gZnJvbSAnQC91dGlscy9yc2FFbmNyeXB0JzsKZXhwb3J0IGRlZmF1bHQgewogIGdldEtleTogZ2V0S2V5LAogIGdldFdob2xlS2V5OiBnZXRXaG9sZUtleSwKICBhcHBseVVuaUFkbWluOiBhcHBseVVuaUFkbWluLAogIGNyZWF0ZUNvbnRlc3RGb3VuZEluZm86IGNyZWF0ZUNvbnRlc3RGb3VuZEluZm8sCiAgYXBwbHlSZWdpc3RlclRlYW06IGFwcGx5UmVnaXN0ZXJUZWFtLAogIHJlY29tbWVuZFRlYW1zOiByZWNvbW1lbmRUZWFtcywKICBhbGxvY2F0ZUFsbEV4cGVydHM6IGFsbG9jYXRlQWxsRXhwZXJ0cywKICBjYWxjdWxhdGVBbGxDb250ZXN0U2NvcmU6IGNhbGN1bGF0ZUFsbENvbnRlc3RTY29yZSwKICBjYWxjdWxhdGVQcm9tb3Rpb246IGNhbGN1bGF0ZVByb21vdGlvbiwKICBhbGxvY2F0ZUFsbEV4cGVydHN3aXRoR3JvdXA6IGFsbG9jYXRlQWxsRXhwZXJ0c3dpdGhHcm91cCwKICBjcmVhdGVDZXJ0aWZpY2F0ZTogY3JlYXRlQ2VydGlmaWNhdGUsCiAgYXV0b0luaXRUZXh0OiBhdXRvSW5pdFRleHQKfTsKCmZ1bmN0aW9uIGdldEtleSgpIHsKICByZXR1cm4gcmVxdWVzdCh7CiAgICB1cmw6ICcvY29tbW9uL2dldEtleScsCiAgICBtZXRob2Q6ICdwb3N0JwogIH0pOwp9CgpmdW5jdGlvbiBnZXRXaG9sZUtleShrZXksIHZhbHVlKSB7CiAgdmFsdWUgPSB2YWx1ZSA+IDkgPyB2YWx1ZSA6ICcwJyArIHZhbHVlOwogIHJldHVybiBrZXkgKyB2YWx1ZSArIGtleS5zcGxpdCgnJykucmV2ZXJzZSgpLmpvaW4oJycpOwp9IC8vIOagoee6p+euoeeQhuWRmOeUs+ivtwoKCmZ1bmN0aW9uIGFwcGx5VW5pQWRtaW4obm9kZSkgewogIHJldHVybiByZXF1ZXN0KHsKICAgIHVybDogJy9hcHBseS9hcHBseVVuaUFkbWluJywKICAgIG1ldGhvZDogJ3Bvc3QnLAogICAgZGF0YTogewogICAgICBub2RlOiBKU09OLnN0cmluZ2lmeShub2RlKQogICAgfQogIH0pOwp9IC8vIOernui1m+WIm+W7ugoKCmZ1bmN0aW9uIGNyZWF0ZUNvbnRlc3RGb3VuZEluZm8obm9kZSkgewogIHJldHVybiByZXF1ZXN0KHsKICAgIHVybDogJy9Db250ZXN0Rmxvdy9jcmVhdGVGb3VuZEluZm8nLAogICAgbWV0aG9kOiAncG9zdCcsCiAgICBkYXRhOiB7CiAgICAgIG5vZGU6IEpTT04uc3RyaW5naWZ5KG5vZGUpCiAgICB9CiAgfSk7Cn0gLy8g5oql5ZCN6Zif5LyN5Yib5bu6L+S/ruaUueS/neWtmAoKCmZ1bmN0aW9uIGFwcGx5UmVnaXN0ZXJUZWFtKG5vZGUpIHsKICByZXR1cm4gcmVxdWVzdCh7CiAgICB1cmw6ICcvYXBwbHkvYXBwbHlSZWdpc3RlclRlYW0nLAogICAgbWV0aG9kOiAncG9zdCcsCiAgICBkYXRhOiB7CiAgICAgIG5vZGU6IEpTT04uc3RyaW5naWZ5KG5vZGUpCiAgICB9CiAgfSk7Cn0gLy8g5qCh6LWbL+WInei1m+aOqOiNkAoKCmZ1bmN0aW9uIHJlY29tbWVuZFRlYW1zKHVzZXJJZCwgbm9kZSkgewogIHJldHVybiByZXF1ZXN0KHsKICAgIHVybDogJy9hcHBseS9yZWNvbW1lbmRUZWFtcycsCiAgICBtZXRob2Q6ICdwb3N0JywKICAgIGRhdGE6IHsKICAgICAgdXNlcklkOiB1c2VySWQsCiAgICAgIG5vZGU6IEpTT04uc3RyaW5naWZ5KG5vZGUpCiAgICB9CiAgfSk7Cn0gLy8g5LiT5a625YiG6YWNL+mHjeaWsOWIhumFjQoKCmZ1bmN0aW9uIGFsbG9jYXRlQWxsRXhwZXJ0cyhleHBlcnRzLCBjb250ZXN0LCB0ZWFtU3RhdHVzKSB7CiAgcmV0dXJuIHJlcXVlc3QoewogICAgdXJsOiAnL0NvbnRlc3RGbG93L2FsbG9jYXRlQWxsRXhwZXJ0cycsCiAgICBtZXRob2Q6ICdwb3N0JywKICAgIGRhdGE6IHsKICAgICAgZXhwZXJ0czogZXhwZXJ0cywKICAgICAgY29udGVzdDogY29udGVzdCwKICAgICAgdGVhbVN0YXR1czogdGVhbVN0YXR1cwogICAgfQogIH0pOwp9IC8vIOS4k+WutuWIhumFjS/ph43mlrDliIbphY0KCgpmdW5jdGlvbiBhbGxvY2F0ZUFsbEV4cGVydHN3aXRoR3JvdXAoY29udGVzdCwgZ3JvdXBzLCB0ZWFtU3RhdHVzKSB7CiAgcmV0dXJuIHJlcXVlc3QoewogICAgdXJsOiAnL0NvbnRlc3RGbG93L2FsbG9jYXRlQWxsRXhwZXJ0c3dpdGhHcm91cCcsCiAgICBtZXRob2Q6ICdwb3N0JywKICAgIGRhdGE6IHsKICAgICAgY29udGVzdDogY29udGVzdCwKICAgICAgZ3JvdXBzOiBncm91cHMsCiAgICAgIHRlYW1TdGF0dXM6IHRlYW1TdGF0dXMKICAgIH0KICB9KTsKfSAvLyDorqHnrpcv6YeN566X5oC75YiGCgoKZnVuY3Rpb24gY2FsY3VsYXRlQWxsQ29udGVzdFNjb3JlKGNvbnRlc3RJbmZvSWQsIGZsb3dUeXBlSWQpIHsKICByZXR1cm4gcmVxdWVzdCh7CiAgICB1cmw6ICcvQ29udGVzdEZsb3cvY2FsY3VsYXRlQWxsQ29udGVzdFNjb3JlJywKICAgIG1ldGhvZDogJ3Bvc3QnLAogICAgZGF0YTogewogICAgICBjb250ZXN0SW5mb0lkOiBjb250ZXN0SW5mb0lkLAogICAgICBmbG93VHlwZUlkOiBmbG93VHlwZUlkCiAgICB9CiAgfSk7Cn0gLy8g6K6h566XL+mHjeeul+aZi+e6p+aDheWGtQoKCmZ1bmN0aW9uIGNhbGN1bGF0ZVByb21vdGlvbihkYXRhKSB7CiAgcmV0dXJuIHJlcXVlc3QoewogICAgdXJsOiAnL0NvbnRlc3RGbG93L2NhbGN1bGF0ZVByb21vdGlvbicsCiAgICBtZXRob2Q6ICdwb3N0JywKICAgIGRhdGE6IHsKICAgICAgZGF0YTogZGF0YQogICAgfQogIH0pOwp9IC8vIOeUn+aIkOivgeS5pgoKCmZ1bmN0aW9uIGNyZWF0ZUNlcnRpZmljYXRlKF94KSB7CiAgcmV0dXJuIF9jcmVhdGVDZXJ0aWZpY2F0ZS5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwp9Ci8qKg0KICog5LiL6L295Lit5b+D77yM6ZmE5Lu255Sf5oiQ6Iez5a+M5paH5pys5qGGDQogKiBAcGFyYW0geyp9IGlkIOagj+ebruWGheWuuWlkDQogKiBAcmV0dXJucw0KICovCgoKZnVuY3Rpb24gX2NyZWF0ZUNlcnRpZmljYXRlKCkgewogIF9jcmVhdGVDZXJ0aWZpY2F0ZSA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZShfcmVmKSB7CiAgICB2YXIga2V5V29yZHMsIHBhZ2VJbmZvLCB0cmVlSW5mbywgc2VhcmNoS2V5LCBzb3J0LCByZWcsIGFuZG9yOwogICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICBrZXlXb3JkcyA9IF9yZWYua2V5V29yZHMsIHBhZ2VJbmZvID0gX3JlZi5wYWdlSW5mbywgdHJlZUluZm8gPSBfcmVmLnRyZWVJbmZvLCBzZWFyY2hLZXkgPSBfcmVmLnNlYXJjaEtleSwgc29ydCA9IF9yZWYuc29ydCwgcmVnID0gX3JlZi5yZWcsIGFuZG9yID0gX3JlZi5hbmRvcjsKICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDM7CiAgICAgICAgICAgIHJldHVybiBnZXRFbmNyeXB0S2V5V29yZChrZXlXb3Jkcyk7CgogICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICBrZXlXb3JkcyA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgIF9jb250ZXh0LnQwID0gcmVxdWVzdDsKICAgICAgICAgICAgX2NvbnRleHQudDEgPSBrZXlXb3JkczsKICAgICAgICAgICAgX2NvbnRleHQudDIgPSBwYWdlSW5mbzsKICAgICAgICAgICAgX2NvbnRleHQudDMgPSB0cmVlSW5mbzsKICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDEwOwogICAgICAgICAgICByZXR1cm4gZ2V0RW5jcnlwdEtleVdvcmQoSlNPTi5zdHJpbmdpZnkoc2VhcmNoS2V5KSk7CgogICAgICAgICAgY2FzZSAxMDoKICAgICAgICAgICAgX2NvbnRleHQudDQgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICBfY29udGV4dC50NSA9IHNvcnQ7CiAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAxNDsKICAgICAgICAgICAgcmV0dXJuIGdldEVuY3J5cHRLZXlXb3JkKEpTT04uc3RyaW5naWZ5KHJlZykpOwoKICAgICAgICAgIGNhc2UgMTQ6CiAgICAgICAgICAgIF9jb250ZXh0LnQ2ID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgX2NvbnRleHQudDcgPSBhbmRvcjsKICAgICAgICAgICAgX2NvbnRleHQudDggPSB7CiAgICAgICAgICAgICAga2V5V29yZHM6IF9jb250ZXh0LnQxLAogICAgICAgICAgICAgIHBhZ2VJbmZvOiBfY29udGV4dC50MiwKICAgICAgICAgICAgICB0cmVlSW5mbzogX2NvbnRleHQudDMsCiAgICAgICAgICAgICAgc2VhcmNoS2V5OiBfY29udGV4dC50NCwKICAgICAgICAgICAgICBzb3J0OiBfY29udGV4dC50NSwKICAgICAgICAgICAgICByZWc6IF9jb250ZXh0LnQ2LAogICAgICAgICAgICAgIGFuZG9yOiBfY29udGV4dC50NwogICAgICAgICAgICB9OwogICAgICAgICAgICBfY29udGV4dC50OSA9IHsKICAgICAgICAgICAgICB1cmw6ICcvQ29udGVzdEZsb3cvY3JlYXRlQ2VydGlmaWNhdGUnLAogICAgICAgICAgICAgIG1ldGhvZDogJ3Bvc3QnLAogICAgICAgICAgICAgIGRhdGE6IF9jb250ZXh0LnQ4CiAgICAgICAgICAgIH07CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5hYnJ1cHQoInJldHVybiIsICgwLCBfY29udGV4dC50MCkoX2NvbnRleHQudDkpKTsKCiAgICAgICAgICBjYXNlIDE5OgogICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0sIF9jYWxsZWUpOwogIH0pKTsKICByZXR1cm4gX2NyZWF0ZUNlcnRpZmljYXRlLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7Cn0KCmZ1bmN0aW9uIGF1dG9Jbml0VGV4dChpZCkgewogIHJldHVybiByZXF1ZXN0KHsKICAgIHVybDogJy9jaGFubmVsL2F1dG8taW5pdC10ZXh0JywKICAgIG1ldGhvZDogJ3Bvc3QnLAogICAgZGF0YTogewogICAgICBpZDogaWQKICAgIH0KICB9KTsKfQ=="},{"version":3,"sources":["D:/Microsoft VS Code/vs code/软件项目管理/大实例/前后端源码/front/src/api/other.js"],"names":["request","getEncryptKeyWord","getKey","getWholeKey","applyUniAdmin","createContestFoundInfo","applyRegisterTeam","recommendTeams","allocateAllExperts","calculateAllContestScore","calculatePromotion","allocateAllExpertswithGroup","createCertificate","autoInitText","url","method","key","value","split","reverse","join","node","data","JSON","stringify","userId","experts","contest","teamStatus","groups","contestInfoId","flowTypeId","keyWords","pageInfo","treeInfo","searchKey","sort","reg","andor","id"],"mappings":"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","sourcesContent":["import request from '@/utils/request'\r\nimport { getEncryptKeyWord } from '@/utils/rsaEncrypt'\r\n\r\nexport default {\r\n  getKey,\r\n  getWholeKey,\r\n  applyUniAdmin,\r\n  createContestFoundInfo,\r\n  applyRegisterTeam,\r\n  recommendTeams,\r\n  allocateAllExperts,\r\n  calculateAllContestScore,\r\n  calculatePromotion,\r\n  allocateAllExpertswithGroup,\r\n  createCertificate,\r\n  autoInitText\r\n}\r\n\r\nfunction getKey() {\r\n  return request({\r\n    url: '/common/getKey',\r\n    method: 'post'\r\n  })\r\n}\r\n\r\nfunction getWholeKey(key, value) {\r\n  value = value > 9 ? value : '0' + value\r\n  return key + value + key.split('').reverse().join('')\r\n}\r\n\r\n// 校级管理员申请\r\nfunction applyUniAdmin(node) {\r\n  return request({\r\n    url: '/apply/applyUniAdmin',\r\n    method: 'post',\r\n    data: {\r\n      node: JSON.stringify(node)\r\n    }\r\n  })\r\n}\r\n\r\n// 竞赛创建\r\nfunction createContestFoundInfo(node) {\r\n  return request({\r\n    url: '/ContestFlow/createFoundInfo',\r\n    method: 'post',\r\n    data: {\r\n      node: JSON.stringify(node)\r\n    }\r\n  })\r\n}\r\n// 报名队伍创建/修改保存\r\nfunction applyRegisterTeam(node) {\r\n  return request({\r\n    url: '/apply/applyRegisterTeam',\r\n    method: 'post',\r\n    data: {\r\n      node: JSON.stringify(node)\r\n    }\r\n  })\r\n}\r\n// 校赛/初赛推荐\r\nfunction recommendTeams(userId, node) {\r\n  return request({\r\n    url: '/apply/recommendTeams',\r\n    method: 'post',\r\n    data: {\r\n      userId: userId,\r\n      node: JSON.stringify(node)\r\n    }\r\n  })\r\n}\r\n// 专家分配/重新分配\r\nfunction allocateAllExperts(experts, contest, teamStatus) {\r\n  return request({\r\n    url: '/ContestFlow/allocateAllExperts',\r\n    method: 'post',\r\n    data: {\r\n      experts: experts,\r\n      contest: contest,\r\n      teamStatus: teamStatus\r\n    }\r\n  })\r\n}\r\n\r\n// 专家分配/重新分配\r\nfunction allocateAllExpertswithGroup(contest, groups, teamStatus) {\r\n  return request({\r\n    url: '/ContestFlow/allocateAllExpertswithGroup',\r\n    method: 'post',\r\n    data: {\r\n      contest: contest,\r\n      groups: groups,\r\n      teamStatus: teamStatus\r\n    }\r\n  })\r\n}\r\n\r\n// 计算/重算总分\r\nfunction calculateAllContestScore(contestInfoId, flowTypeId) {\r\n  return request({\r\n    url: '/ContestFlow/calculateAllContestScore',\r\n    method: 'post',\r\n    data: { contestInfoId, flowTypeId }\r\n  })\r\n}\r\n\r\n// 计算/重算晋级情况\r\nfunction calculatePromotion(data) {\r\n  return request({\r\n    url: '/ContestFlow/calculatePromotion',\r\n    method: 'post',\r\n    data: { data }\r\n  })\r\n}\r\n\r\n// 生成证书\r\nasync function createCertificate({ keyWords, pageInfo, treeInfo, searchKey, sort, reg, andor }) {\r\n  keyWords = await getEncryptKeyWord(keyWords)\r\n  return request({\r\n    url: '/ContestFlow/createCertificate',\r\n    method: 'post',\r\n    data: {\r\n      keyWords,\r\n      pageInfo,\r\n      treeInfo,\r\n      searchKey: await getEncryptKeyWord(JSON.stringify(searchKey)),\r\n      sort,\r\n      reg: await getEncryptKeyWord(JSON.stringify(reg)),\r\n      andor\r\n    }\r\n  })\r\n}\r\n/**\r\n * 下载中心，附件生成至富文本框\r\n * @param {*} id 栏目内容id\r\n * @returns\r\n */\r\nfunction autoInitText(id) {\r\n  return request({\r\n    url: '/channel/auto-init-text',\r\n    method: 'post',\r\n    data: { id }\r\n  })\r\n}\r\n"]}]}