{"remainingRequest":"D:\\Microsoft VS Code\\vs code\\软件项目管理\\大实例\\前后端源码\\front\\node_modules\\babel-loader\\lib\\index.js!D:\\Microsoft VS Code\\vs code\\软件项目管理\\大实例\\前后端源码\\front\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Microsoft VS Code\\vs code\\软件项目管理\\大实例\\前后端源码\\front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Microsoft VS Code\\vs code\\软件项目管理\\大实例\\前后端源码\\front\\src\\views\\dialogs\\DlgBatchImport.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Microsoft VS Code\\vs code\\软件项目管理\\大实例\\前后端源码\\front\\src\\views\\dialogs\\DlgBatchImport.vue","mtime":1741681638956},{"path":"D:\\Microsoft VS Code\\vs code\\软件项目管理\\大实例\\前后端源码\\front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Microsoft VS Code\\vs code\\软件项目管理\\大实例\\前后端源码\\front\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\Microsoft VS Code\\vs code\\软件项目管理\\大实例\\前后端源码\\front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Microsoft VS Code\\vs code\\软件项目管理\\大实例\\前后端源码\\front\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["DlgBatchImport.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <DlgBasic :dialog=\"importDialog\" :digbasic-submit=\"submit\">\r\n    <template slot=\"mainForm\">\r\n      <el-upload class=\"upload-demo\" drag action :limit=\"1\" :show-file-list=\"true\" :http-request=\"()=>{}\" :on-exceed=\"handleExceed\" :before-upload=\"beforeUpload\" :on-remove=\"()=>file={}\">\r\n        <i class=\"el-icon-upload\" />\r\n        <div class=\"el-upload__text\">将文件拖到此处，或<em>点击上传</em></div>\r\n        <div v-show=\"noFile\" slot=\"tip\" class=\"el-upload__tip\" style=\"color:red\">请上传文件！</div>\r\n        <div v-if=\"isNeedExport\" slot=\"tip\" class=\"el-upload__tip\">请先进行<span class=\"download\">“导出”</span>或<span class=\"download\">“全部导出”</span>操作获取模板</div>\r\n        <div slot=\"tip\" class=\"el-upload__tip\">\r\n          <span v-show=\"!isNeedExport\" class=\"download\" @click=\"downloadTemplate\">下载模板</span>\r\n          <span>导入文件不能超过5M，仅允许导入“xls”或“xlsx”格式文件</span>\r\n        </div>\r\n      </el-upload>\r\n    </template>\r\n  </DlgBasic>\r\n</template>\r\n\r\n<script>\r\nimport commonAPI from '@/api/file'\r\nimport { getTemplateFile } from '@/utils/common'\r\nimport IEAPI from '@/api/importAndExport'\r\nimport DlgBasic from '@/components/DlgBasic'\r\n\r\nexport default {\r\n  name: 'DlgBatchImport',\r\n  components: { DlgBasic },\r\n  props: {\r\n    importDialog: { type: Object, default: () => { } },\r\n    templateFile: {\r\n      type: Object, default: () => { return { id: null, name: '' } }\r\n    },\r\n    // 是否需要先执行导出操作\r\n    isNeedExport: { type: Boolean, default: false },\r\n    keyWords: { type: String, default: '' }\r\n  },\r\n  data() {\r\n    return {\r\n      file: {},\r\n      fileFlag: false,\r\n      dialogFull: false,\r\n      comfimLoading: false\r\n    }\r\n  },\r\n  computed: {\r\n    noFile() {\r\n      if (!this.file.type && this.fileFlag) return true\r\n      return false\r\n    }\r\n  },\r\n  methods: {\r\n    // The parameter of the hook before uploading a file is the uploaded file.\r\n    // If false or promise is returned and rejected, the upload will stop.\r\n    // 上传文件前调用的钩子函数\r\n    beforeUpload(file) {\r\n      const fileTypes = ['xls', 'xlsx']\r\n      const splitArr = file.name.split('.')\r\n      const fileType = splitArr[splitArr.length - 1]\r\n      const isLtSize = file.size / 1024 / 1024 < this.CONSTANT.FILE_MAX_SIZE\r\n\r\n      if (!fileTypes.includes(fileType)) {\r\n        return this.$message.error('上传文件只能是 xls/xlsx 格式!')\r\n      }\r\n      if (!isLtSize) {\r\n        return this.$message.error(`上传图片大小不能超过 ${this.CONSTANT.FILE_MAX_SIZE} MB!`)\r\n      }\r\n      this.fileFlag = false\r\n      this.file = file\r\n    },\r\n    // 上传文件数量超过限制时触发的钩子函数\r\n    // Hook when the number of files exceeds the limit\r\n    handleExceed(files, fileList) {\r\n      this.$message.warning('当前限制选择 1 个文件，请删除后继续上传')\r\n    },\r\n    // 关闭弹窗\r\n    // Close the pop-up window\r\n    closeDialog() {\r\n      this.importDialog.show = false\r\n    },\r\n    // Download the template, judge which interface to call according to different bellongpage fields,\r\n    // and obtain the templates belonging to different pages\r\n    async downloadTemplate() {\r\n      const templateFile = getTemplateFile(this.keyWords, '.xlsx')\r\n      try {\r\n        this.importDialog.show = false\r\n        this.fullScreenLoading()\r\n        const content = await commonAPI.downloadFile(templateFile.id)\r\n        this.fullScreenLoading().close()\r\n        this.downloadFile(content, templateFile.name)\r\n      } catch (error) {\r\n        this.fullScreenLoading().close()\r\n      }\r\n    },\r\n    // Override the default upload behavior and customize the implementation of upload\r\n    // According to different bellongpage fields, determine which page's upload interface to call,\r\n    // or change it to emit event to process the event on each page, depending on the requirements\r\n    // 确认上传\r\n    async submit() {\r\n      if (!this.file.type) {\r\n        return (this.fileFlag = true)\r\n      }\r\n      try {\r\n        this.comfimLoading = true\r\n        this.importDialog.show = false\r\n        this.fullScreenLoading()\r\n        await IEAPI.importInfo(this.keyWords, this.file)\r\n        this.comfimLoading = false\r\n        this.fullScreenLoading().close()\r\n        this.$message.success('导入成功')\r\n        this.$parent.$refs.dataTableList.$refs.table.clearSelection()\r\n        this.$parent.$refs.dataTableList.initDataList()\r\n      } catch (error) {\r\n        this.fullScreenLoading().close()\r\n      }\r\n      this.file = {}\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n@import \"~@/assets/css/variables.scss\";\r\n\r\n::v-deep .el-dialog__body {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n.el-upload__tip {\r\n  display: flex;\r\n  .download {\r\n    margin-right: 5px;\r\n    color: $--color-primary;\r\n    cursor: pointer;\r\n  }\r\n}\r\n.view-dialog {\r\n  ::v-deep .el-dialog__body {\r\n    max-height: unset;\r\n    height: calc(100vh - 108px);\r\n  }\r\n}\r\n</style>\r\n"],"sourceRoot":"src/views/dialogs"}]}